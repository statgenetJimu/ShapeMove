# タスクのリスト
※ (hoge)はオプショナル
0 事前作業環境設定、他(必須)
0.1 github
0.1.1 github.comにて自分のアカウントを作る。そのうえで、ここhttps://github.com/statgenetJimu/StapeMoveのソース改変などができるようにCollabolatorとなる(githubアカウント名を山田に教えて、Collaborator登録してもらう）
0.1.2 gitコマンドが打てるようになる(最低限コマンド → http://d.hatena.ne.jp/ryamada/20150918)
0.2 C++
0.2.1 自分のPCで動くようにする
0.3 python
0.3.1 自分のPCで動くようにする
(0.4) R
(0.4.1) 自分のPCで動くようにする

1 WITK (C++)
1.1 Workbenchをエンドユーザとして使えるようにする　→　使用手順をファイルとして作成する
1.1.1 特に、Threshold 法による領域選択(segmentation)を実行できるようにする
1.2 WITKベースの開発
1.2.1 WITKソースコード(githubへのリンク https://github.com/MITK/MITK )から実行可能環境を立ち上げる → 実施手順をファイルとして作成する
1.2.2 WITKWorkbenchのTheshold法によるsegmentationを実行しているソースを見つけてそれを解釈する
(1.2.3) Threshold法によるsegmentationを実行する別のモジュールを自前作成して作りこむ

2 画像ファイルの取り扱い (python,c++)
2.1 nd2ファイル形式(NIKON)
2.1.1 nd2ファイル形式のファイルをpythonのnd2readerモジュールで読み込み、n次元アレイから適当なプロットを作成する
2.2 DICOMファイル形式(WITK)
2.1.2 DICOMファイル形式のファイルをpythonのpydicomモジュールを使って読み込み、n次元アレイから適当なプロットを作成する

3 アレイの扱い(python,c++)
3.1 値が{0,1}のみのアレイデータの扱い(python)
3.1.1 値が{0,1}のみの任意次元・任意サイズのアレイであり、値が1の連続領域がただ１つだけあるようなアレイ(OneObjectArray)を作成する関数を作る(python)
3.1.2 OneObjectArrayの「容積(２次元なら面積、３次元なら体積、４次元ならｘ積)」を返す関数を作る
3.1.3 OneObjectArrayの「周囲(２次元なら周長、３次元なら周囲面積、４次元なら周囲体積」を返す関数を作る
(3.2) c++にて3.1の内容を実施する
(3.3) pythonが持つアレイをc++に引き渡して、c++でのアレイ操作結果をpythonに戻すラッパーを書く → http://qiita.com/termoshtt/items/81eeb0467d9087958f7f 
